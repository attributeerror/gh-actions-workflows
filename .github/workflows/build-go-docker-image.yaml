name: Build & Push Docker Image

on:
  workflow_call:
    inputs:
      package-name:
        type: string
        required: true

jobs:
  build:
    if: |
      github.triggering_actor != 'dependabot[bot]'         &&
      (startsWith(github.event.head_commit.message, 'feat')  ||
        startsWith(github.event.head_commit.message, 'fix')  ||
        startsWith(github.event.head_commit.message, 'chore') ||
        startsWith(github.event.head_commit.message, 'build') ||
        startsWith(github.event.head_commit.message, 'ci') ||
        startsWith(github.event.head_commit.message, 'perf') ||
        startsWith(github.event.head_commit.message, 'refactor') ||
        startsWith(github.event.head_commit.message, 'revert') ||
        startsWith(github.event.head_commit.message, 'style') ||
        startsWith(github.event.head_commit.message, 'test') ||
        startsWith(github.event.head_commit.message, 'Merge')
      ) && !contains(github.event.head_commit.message, '!skip!')
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Golang
        uses: actions/setup-go@v3
        with:
          go-version: '^1.21.0'
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true
      
      - name: Build & push the Docker image
        run: |
          docker build --file Dockerfile --tag ghcr.io/attributeerror/${{ inputs.package-name }}:$(git log --format="%h" -n 1) .
          docker push ghcr.io/attributeerror/${{ inputs.package-name }}:$(git log --format="%h" -n 1)