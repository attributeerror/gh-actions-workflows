name: Build & Push Docker Image

on:
  workflow_call:
    inputs:
      package-name:
        type: string
        required: true
        description: 'The name for the Docker image that gets pushed.'
      docker-build-args:
        type: string
        required: false
        description: 'Build arguments to pass to Buildx action.'
    outputs:
      version:
        description: 'The version determined via Semantic Release'
        value: ${{ jobs.build.outputs.version }}
      new-release-published:
        description: 'Whether Semantic Release determines a new version should be published.'
        value: ${{ jobs.build.outputs.new-release-published }}

jobs:
  build:
    if: |
      github.triggering_actor != 'dependabot[bot]'         &&
      (startsWith(github.event.head_commit.message, 'feat')  ||
        startsWith(github.event.head_commit.message, 'fix')  ||
        startsWith(github.event.head_commit.message, 'chore') ||
        startsWith(github.event.head_commit.message, 'build') ||
        startsWith(github.event.head_commit.message, 'ci') ||
        startsWith(github.event.head_commit.message, 'perf') ||
        startsWith(github.event.head_commit.message, 'refactor') ||
        startsWith(github.event.head_commit.message, 'revert') ||
        startsWith(github.event.head_commit.message, 'style') ||
        startsWith(github.event.head_commit.message, 'test') ||
        startsWith(github.event.head_commit.message, 'Merge')
      ) && !contains(github.event.head_commit.message, '[skip ci]')
    outputs:
        version: v${{ steps.semantic.outputs.release-version }}
        new-release-published: ${{ steps.semantic.outputs.new-release-published }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # actions/checkout@v4.1.4
      
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # docker/setup-qemu-action@v3.0.0

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # docker/setup-buildx-action@v3.3.0

      - name: Login to GHCR
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Run Semantic Release
        uses: docker://ghcr.io/codfish/semantic-release-action@sha256:71048986f7e28f024cbad0ef106a7ef20b9b0d322f3a8aa51d89f1c424e75061 # codfish/semantic-release-action@v3.3.0
        id: semantic
        with:
          branches: |
            [
              'main',
              {
                name: 'alpha',
                prerelease: true
              },
              {
                name: 'beta',
                prerelease: true
              }
            ]
          tag_format: 'v${version}'
          plugins: |
            [
              [
                "@semantic-release/commit-analyzer",
                {
                  "releaseRules": [
                    { "breaking": true, "release": "major" },
                    { "revert": true, "release": "patch" },
                    { "type": "feat", "release": "minor" },
                    { "type": "fix", "release": "patch" },
                    { "type": "chore", "release": "patch" },
                    { "type": "perf", "release": "patch" },
                    { "type": "refactor", "release": "patch" },
                    { "type": "revert", "release": "patch" },
                    { "type": "test", "release": "patch" },
                    { "type": "npm", "release": "patch" },
                    { "type": "build", "scope": "deps", "release": "patch" },
                    { "scope": "no-release", "release": false }
                  ],
                  "parserOpts": {
                    "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES"]
                  }
                }
              ],
              [
                "@semantic-release/release-notes-generator",
                {
                  "preset": "conventionalcommits",
                  "presetConfig": {
                    "types": [
                      { "type": "feat", "section": "‚ú® Features" },
                      { "type": "fix", "section": "üêõ Bug Fixes" },
                      { "type": "chore", "section": "üôÇ Chores" },
                      { "type": "perf", "section": "üöÑ Performance Improvements" },
                      { "type": "refactor", "hidden": true },
                      { "type": "npm", "section": "ü§ñ Dependency Updates" },
                      { "type": "build", "section": "ü§ñ Dependency Updates" },
                    ]
                  },
                  "parserOpts": {
                    "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES"],
                    "headerPattern": /^(\w*)(?:\((.*)\))?: (.*)$/,
                    "headerCorrespondence": [
                      "type",
                      "scope",
                      "subject"
                    ],
                    "revertPattern": "/^(?:Revert|revert:)\s"?([\s\S]+?)"?\s*This reverts commit (\w{7,40})\b/i",
                    "revertCorrespondence": ["header", "hash"]
                  },
                  "writerOpts": {
                    "commitsSort": ["subject", "scope"]
                  }
                }
              ]
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push the Docker image
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/attributeerror/${{ inputs.package-name }}:v${{ steps.semantic.outputs.release-version }}
          build-args: ${{ inputs.docker-build-args }}

      - name: Create Release
        if: success() && github.event_name == 'push' && github.ref_name == 'main' && steps.semantic.outputs.new-release-published == 'true'
        uses: softprops/action-gh-release@9b795e578288d5ff64564dfa7dd4cda7b04bb648 # v2.0.4
        with:
          tag_name: v${{ steps.semantic.outputs.release-version }}
          body: ${{ steps.semantic.outputs.release-notes }}
          draft: false
          prerelease: false
          make_latest: true

      - name: Delete tag if build unsuccessful
        if: failure()
        shell: bash
        run: git push origin refs/tags/v${{ steps.semantic.outputs.release-version }} --delete
